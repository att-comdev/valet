#        __
#  /_\  |__| |
# /   \ |    |
#

[server]
host = 0.0.0.0
port = 8090

[messaging]
username = rabbitmq_username
password = rabbitmq_psw
host = rabbitmq_host
port = rabbitmq_port

[identity]
project_name = project_name
username = project_username
password = project_username_password
auth_url = http://keystone_host:5000/v2.0
# interface = admin

#  _   _
# | \ |_\
# |_/ |_/
#

[music]
host = music_host
port = 8080
keyspace = valet_keyspace
replication_factor = 3
# tries = 10
# interval = 1
# request_table = placement_requests
# response_table = placement_results
# event_table = oslo_messages
# resource_table = resource_status
# app_table = app
# resource_index_table = resource_log_index
# app_index_table = app_log_index
# uuid_table = uuid_map


#  __       __          __
# |__ |\ | |    | |\ | |__
# |__ | \| |__T | | \| |__
#

[engine]
# Set the location of daemon process id
pid = /var/run/valet/ostro-daemon.pid

# Set IP of this Ostro
# ip = localhost

# Used for Ostro active/passive selection
priority = 1


#------------------------------------------------------------------------------------------------------------
# Logging configuration
#------------------------------------------------------------------------------------------------------------
# Set logging parameters
# logger_name = test
# logging level = [debug|info]
# logging_level = debug

# Set the directory to locate the log file
# logging_dir = /var/log/valet/engine/

# Set the maximum size of the main logger as Byte
# max_main_log_size = 5000000

# Set the maximum logfile size as Byte for time-series log files
# max_log_size = 1000000

# Set the maximum number of time-series log files
# max_num_of_logs = 20

#------------------------------------------------------------------------------------------------------------
# Management configuration
#------------------------------------------------------------------------------------------------------------
# Inform the name of datacenter (region name), where Valet/Ostro is deployed.
# datacenter_name = bigsite

# Set the AIC naming convention rules.
# Currently, 3 chars of CLLI + region number + 'r' + rack id number + 1 char of node type + node id number.
# For example, pdk15r05c001 indicates the first KVM compute server (i.e., 'c001') in the fifth rack
# (i.e., 'r05') in the fifteenth DeKalb-Peachtree Airport Region (i.e., 'pdk15').

# Set the number of chars that indicates the region code. The above example, 'pdk' is the region code.
# num_of_region_chars = 3

# Set 1 char of rack indicator. This should be 'r'.
# rack_code_list = r

# Set all of chars, each of which indicates the node type.
# Currently, 'a' = network, 'c' = KVM compute, 'u' = ESXi compute, 'f' = ?, 'o' = operation, 'p' = power,
# 's' = storage.
# node_code_list = a,c,u,f,o,p,s

# Set trigger time or frequency for checking compute hosting server status (i.e., call Nova)
# Note that currently, compute (Nova) should be triggered first then trigger topology.
# compute_trigger_time = 01:00
# compute_trigger_frequency = 3600

# Set trigger time or frequency for checking datacenter topology (i.e., call AIC Formation)
# topology_trigger_time = 02:00
# topology_trigger_frequency = 3600

# Set default overbooking ratios. Note that each compute node can have its own ratios.
# default_cpu_allocation_ratio = 16
# default_ram_allocation_ratio = 1.5
# default_disk_allocation_ratio = 1

# Set static unused percentages of resources (i.e., standby) that are set aside for applications's workload spikes.
# static_cpu_standby_ratio = 20
# static_mem_standby_ratio = 20
# static_local_disk_standby_ratio = 20

# Set Ostro execution mode
# mode = [live|sim], sim will let Ostro simulate datacenter, while live will let it handle a real datacenter
# mode = live
# Set the location of simulation configuration file (i.e., ostro_sim.cfg).
# This is used only when the simulation mode
# sim_cfg_loc = /etc/valet/engine/ostro_sim.cfg

# Inform whether network controller (i.e., Tegu) has been deployed.
# If it does, set its API, Otherwise ignore these parameters
# network_control = no
# network_control_api = 29444/tegu/api

# Set RPC server ip and port if used. Otherwise, ignore these parameters
# rpc_server_ip = localhost
# rpc_server_port = 8002
