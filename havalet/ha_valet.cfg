#!/usr/bin/env python
# vi: sw=4 ts=4:
#
# ---------------------------------------------------------------------------
#   Copyright (c) 2013-2015 AT&T Intellectual Property
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at:
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
# ---------------------------------------------------------------------------
#
#
#    dictionary of valet monitored processes.
#    key is some logical process name.
#    value MUST have the following properties:
#        'host'
#        'user'
#        'port'
#        'protocol'
#        'start_command'
#        'stop_command'
#        'test_command'
#
#    IMPORTANT:
#        "test_command" - MUST return a value != 0, this value should reflects
#            the monitored process priority.
#
#        "process's priority" - used for active/stand-by scenarios.
#            MUST be greater than 0 - lower number means higher priority.
#            e.g. instance which returns '1', as its response to "test_command" invocation,
#            will get precedence over instance which returns '2' as its priority.
#            priority 0 means thr process is down.
#
#        "stand_by_list" - OPTIONAL property. comma delimited hosts list.
#            used on active/stand-by scenarios.
#            ha_valet will attempt to restart the instance with the lower priority value,
#            only if the instance fails to start, ha_valet will try to restart the process
#            on the following host in the list.
#
#   OSTRO_SERVER_DIR - /home/stack/ostro/code/ostro_server
#   ALLEGRO_WSGI_DIR - /home/stack/allegro/allegro/allegro
#   TOMCAT_BIN_DIR - /home/stack/apache-tomcat-8.0.32/bin
#   ZK_BIN_DIR - /home/stack/zookeeper-3.4.6/bin
#   CASSANDRA_BIN_DIR - /home/stack/apache-cassandra-2.2.1/bin
#
:Ostro
    priority=1
    host=valet1
    user=stack
    port=
    protocol=
    stand_by_list=valet1,valet2
    start_command="ssh %s@%s 'cd @OSTRO_SERVER_DIR@ ; sudo python ./ostro_daemon.py start'" % (user, host)
    stop_command="ssh %s@%s 'cd @OSTRO_SERVER_DIR@ ; sudo python ./ostro_daemon.py stop'" % (user, host)
    test_command="ssh %s@%s 'exit $(@OSTRO_SERVER_DIR@ ; sudo python ./ostro_daemon.py status ; echo $?)'" % (user, host)
#   test_command="ls -la @OSTRO_SERVER_DIR@/ostro-daemon.pid | wc -l |exit $(awk \'{print $1}\')" % (user)

:Allegro
    priority=1
    host=
    user=stack
    port=8090
    protocol=
    start_command="sudo python @ALLEGRO_WSGI_DIR@/wsgi.py &"
    stop_command="sudo pkill -f wsgi"
    test_command="netstat -nap  | grep %s | grep LISTEN | wc -l | exit $(awk \'{print $1}\')" % (port)

#:Music
#    priority=1
#    host=localhost
#    user=stack
#    port=8080
#    protocol=http
#    start_command="sudo service tomcat7 start"
#    stop_command="sudo service tomcat7 stop"
#    test_command="sudo wget -O /dev/null --server-response %s://%s:%s/MUSIC/rest/test 2>&1 | grep 'Content-Length' | exit $(awk '{print $2}')" % (protocol, host, port)
#   start_command="cd @TOMCAT_BIN_DIR@; sudo ./startup.sh"
#   stop_command="cd @TOMCAT_BIN_DIR@; sudo ./shutdown.sh"


#:ZK
#    priority=1
#    host=localhost
#    user=stack
#    port=
#    protocol=http
#    start_command="sudo @ZK_BIN_DIR@/zkServer.sh start"
#    stop_command="sudo @ZK_BIN_DIR@/zkServer.sh stop"
#    test_command="sudo @ZK_BIN_DIR@/zkServer.sh status | grep Mode | wc -l | exit $(awk '{print $1}')"


#:Cassandra
#    priority=1
#    host=localhost
#    user=stack
#    port=
#    protocol=
#    start_command="sudo @CASSANDRA_BIN_DIR@/cassandra"
#    stop_command="pgrep -u %s -f cassandra | xargs kill -9" % (user)
#    test_command="ps -ef |grep CassandraDaemon | grep java | grep -v 'sh -c ps -ef' | wc -l | exit $(awk \'{print $1}\')"

