#! /bin/bash
# -*- encoding: utf-8 -*-
#
# Copyright (c) 2014-2016 AT&T
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.
#
# See the License for the specific language governing permissions and
# limitations under the License.
#
# /etc/init.d/ostro-listener
#
### BEGIN INIT INFO
# Provides: ostro-listener
# Required-Start: 
# Should-Start: 
# Required-Stop: 
# Should-Stop:
# Default-Start:  3 5
# Default-Stop:   0 1 2 6
# Short-Description: Ostro event listener
# Description: Runs up the ostro event listener process
### END INIT INFO

# Uncomment to set a python virtual environment, if any
#export VENV=/path/to/venv

. /lib/lsb/init-functions

export NAME=ostro-listener

export PIDFILE_TIMEOUT=5
export PIDFILE_PATH="/var/run/valet/${NAME}.pid"
export LOGFILE_PATH="/var/log/$NAME"
export CONFIG_PATH="/etc/$NAME"

if [ "$VENV" ]
then
  source $VENV/bin/activate
fi

export LOGFILE="$LOGFILE_PATH/$NAME.log"
export OSTRO_LISTENER_CONFIG="$CONFIG_PATH/$NAME.conf"

check_pid_dir() {
    # Create the empty dir if necessary
    if [ ! -d /var/run/valet ]; then
        mkdir /var/run/valet
        chown m04060: /var/run/valet
    fi
}


case "$1" in
  start)
    echo "Starting $NAME"
    check_pid_dir
    # Start the daemon 
    ostro-listenerdaemon start
    ;;
  stop)
    echo "Stopping $NAME"
    # Stop the daemon
    ostro-listenerdaemon stop
    ;;
  restart)
    check_pid_dir
    echo "Restarting $NAME"
    ostro-listenerdaemon restart
    ;;
  status)
    status_of_proc -p $PIDFILE_PATH /usr/local/bin/ostro-listenerdaemon && exit 0 || exit $?
    ;;
  *)
    # Refuse to do other stuff
    echo "Usage: /etc/init.d/$NAME {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0
